{"question_id": "28416408-96", "query": "Fit Kmeans function to a one-dimensional array `x` by reshaping it to be a multidimensional array of single values", "retrieval": "numpy.reference.generated.numpy.matrix.reshape    numpy matrix reshape: method: Returns an array containing the same data with a new shape.    numpy.reference.generated.numpy.ufunc.reduce    numpy ufunc reduce: method: Reduces array\u2019s dimension by one, by applying ufunc along one axis.    numpy.reference.generated.numpy.ndarray.reshape    numpy ndarray reshape: method: Returns an array containing the same data with a new shape.    ", "rationale": []}
{"question_id": "42462530-4", "query": "replace white spaces in dataframe `df` with '_'", "retrieval": "python.library.stdtypes#str.replace    python str replace: Return a copy of the string with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced.    pandas.reference.api.pandas.dataframe.replace    pandas dataframe replace: Replace values given in to_replace with value.    pandas.reference.api.pandas.series.str.replace    pandas series str replace: Replace each occurrence of pattern/regex in the Series/Index.    ", "rationale": []}
{"question_id": "19153328-63", "query": "assign value in `group` dynamically to class property `attr`", "retrieval": "python.library.functions#property    python property: Return a property attribute.    python.library.operator#operator.__setitem__    python operator __setitem__: Set the value of a at index b to c.    python.library.functions#setattr    python setattr: This is the counterpart of getattr(). The arguments are an object, a string and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, setattr(x, 'foobar', 123) is equivalent to x.foobar = 123.    ", "rationale": []}
{"question_id": "35707224-41", "query": "sum the length of lists in list `x` that are more than 1 item in length", "retrieval": "python.library.functions#sum    python sum: Sums start and the items of an iterable from left to right and returns the total. The iterable\u2019s items are normally numbers, and the start value is not allowed to be a string.    python.library.collections#collections.Counter    python collections Counter: A Counter is a dict subclass for counting hashable objects. It is a collection where elements are stored as dictionary keys and their counts are stored as dictionary values. Counts are allowed to be any integer value including zero or negative counts. The Counter class is similar to bags or multisets in other languages.    python.library.functions#len    python len: Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set).    ", "rationale": []}
{"question_id": "4741537-60", "query": "append elements of a set `b` to a list `a`", "retrieval": "python.library.collections#collections.deque.extend    python collections deque extend: Extend the right side of the deque by appending elements from the iterable argument.    python.library.stdtypes#set    python set: Return a new set or frozenset object whose elements are taken from iterable. The elements of a set must be hashable. To represent sets of sets, the inner sets must be frozenset objects. If iterable is not specified, a new empty set is returned.    python.library.functions#set    python set: Return a new set object, optionally with elements taken from iterable. set is a built-in class. See set and Set Types \u2014 set, frozenset for documentation about this class.    ", "rationale": []}
