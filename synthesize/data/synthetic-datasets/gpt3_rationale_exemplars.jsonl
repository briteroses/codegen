{"question_id": "16962512-77", "query": "convert scientific notation of variable `a` to decimal", "retrieval": "python.library.decimal#decimal.Decimal    python decimal Decimal: Construct a new Decimal object based from value.    python.library.functions#round    python round: Return number rounded to ndigits precision after the decimal point. If ndigits is omitted or is None, it returns the nearest integer to its input.    python.library.functions#float    python float: Return a floating point number constructed from a number or string x.    ", "rationale": "decimal.Decimal(a) converts variable \u2018a\u2019 to a decimal object. float(decimal.Decimal(a)) converts the decimal object to a floating point number. round(float(decimal.Decimal(a)), 2) rounds the floating point number to 2 decimal places. The answer is round(float(decimal.Decimal(a)), 2)."}
{"question_id": "31029560-68", "query": "plot categorical data in series `df` with kind `bar` using pandas and matplotlib", "retrieval": "pandas.reference.api.pandas.dataframe.plot    pandas dataframe plot: Make plots of Series or DataFrame.    pandas.reference.api.pandas.categorical    pandas categorical: Represent a categorical variable in classic R / S-plus fashion.    pandas.reference.api.pandas.dataframe.set_index    pandas dataframe set_index: Set the DataFrame index using existing columns.    ", "rationale": "df.plot(kind='bar') plots the categorical data in series df with kind bar using pandas and matplotlib. The answer is df.plot(kind='bar')."}
{"question_id": "19156472-7", "query": "Sort a structured numpy array 'df' on multiple columns 'year', 'month' and 'day'.", "retrieval": "python.library.operator#operator.itemgetter    python operator itemgetter: Return a callable object that fetches item from its operand using the operand\u2019s __getitem__() method. If multiple items are specified, returns a tuple of lookup values. For example    pandas.reference.api.pandas.index.argsort    pandas index argsort: Return the integer indices that would sort the index.    pandas.reference.api.pandas.dataframe.sort_values    pandas dataframe sort_values: Sort by the values along either axis.    ", "rationale": "df.sort_values(by=['year', 'month', 'day'], inplace=True) sorts the structured numpy array \u2018df\u2019 on multiple columns \u2018year\u2019, \u2018month\u2019 and \u2018day\u2019. The answer is df.sort_values(by=['year', 'month', 'day'], inplace=True)."}
{"question_id": "28161356-78", "query": "Sort Pandas Dataframe by Date", "retrieval": "pandas.reference.api.pandas.series.sort_index    pandas series sort_index: Sort Series by index labels.    pandas.reference.api.pandas.dataframe.sort_values    pandas dataframe sort_values: Sort by the values along either axis.    pandas.reference.api.pandas.dataframe.sort_index    pandas dataframe sort_index: Sort object by labels (along an axis).    ", "rationale": "df.sort_values(by='Date') sorts the Pandas dataframe `df` by the values in the 'Date' column in ascending order. The answer is df.sort_values(by='Date')."}
{"question_id": "17315881-13", "query": "check if a pandas dataframe `df`'s index is sorted", "retrieval": "pandas.reference.api.pandas.index.argsort    pandas index argsort: Return the integer indices that would sort the index.    numpy.reference.generated.numpy.isin    numpy isin: Calculates element in test_elements, broadcasting over element only. Returns a boolean array of the same shape as element that is True where an element of element is in test_elements and False otherwise.    pandas.reference.api.pandas.series.sort_index    pandas series sort_index: Sort Series by index labels.    ", "rationale": "df.index.is_monotonic returns True if the index is sorted in non-descending order. The answer is df.index.is_monotonic."}
